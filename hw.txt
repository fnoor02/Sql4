Problem 1 : The Number of Seniors and Juniors to Join the Company

WITH CTE AS(
  SELECT employee_id, experience, salary, SUM(salary) OVER(PARTITION BY experience ORDER BY salary) AS 'rsum' 
  FROM Candidates
),

CTE2 AS(
  SELECT 70000 - MAX(rsum) AS 'remaining' FROM CTE WHERE experience = 'Senior' AND rsum <= 70000
)

SELECT 'Senior' AS c.experience, COUNT(rsum) AS accepted_candidates FROM CTE c WHERE rsum <= 70000 AND c.experience = 'Senior'
UNION
SELECT 'Junior' AS c.experience, COUNT(rsum) AS accepted_candidates FROM CTE c WHERE rsum <= (SELECT c2.remaining FROM CTE2 c2)
AND c.experience = 'Junior'


Problem 2 : League Statistics

WITH CTE AS(
SELECT home_team_id AS 'h1', away_team_id AS 'r2', home_team_goals AS 'g1', away_team_goals AS 'g2' 
FROM Matches
UNION ALL
SELECT away_team_id AS 'h1', home_team_id AS 'r2', away_team_goals AS 'g1', home_team_goals AS 'g2' 
FROM Matches)

SELECT t.team_name, COUNT(c.h1) AS 'matches_played', SUM(
CASE 
    WHEN c.g1 > c.g2 THEN 3
    WHEN c.g1 = c.g2 THEN 1
    ELSE 0
END
)
AS 'points', SUM(c.g1) AS 'goal_for', SUM(c.g2) AS 'goal_against', SUM(c.g2) - SUM(c.g1) AS 'goal_diff'
FROM Teams t JOIN  CTE c ON t.team_id = c.h1
GROUP BY c.h1
ORDER BY points DESC, goal_diff DESC, t.team_name;


Problem 3 : Sales Person

WITH CTE AS(
SELECT o.sales_id, c.name
FROM Orders o LEFT JOIN Company c
ON o.com_id = c.com_id
)

SELECT s.name
FROM SalesPerson s WHERE s.sales_id NOT IN (SELECT c.sales_id FROM CTE c WHERE c.name = 'RED');


Problem 4 : Friend Requests II

# Write your MySQL query statement below
WITH CTE AS(
SELECT requester_id FROM RequestAccepted 
UNION ALL
SELECT accepter_id FROM RequestAccepted),

CTE2 AS(
SELECT requester_id AS 'id', COUNT(requester_id) AS 'num' FROM CTE GROUP BY requester_id)

SELECT * FROM CTE2 ORDER BY num DESC LIMIT 1;